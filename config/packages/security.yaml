security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Firewall pour le développement (profiler, assets, etc.)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        api_login:
            pattern: ^/api/login
            stateless: true
            json_login:
                username_path: email
                password_path: password
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall pour toutes les routes API (protégées par JWT)
        api:
            pattern: ^/api
            stateless: true  # Pas de sessions, uniquement JWT
            provider: app_user_provider
            jwt: ~  # Utilisation du JWT pour authentifier les requêtes API

        # Firewall principal (form login avec session)
        main:
            pattern: ^/
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: app_home
            logout:
                path: /logout
            security: true
            stateless: false  # Sessions activées pour le login classique

        # Firewall pour le login API avec JSON (stateless)

    access_control:
        # Accès public pour les routes de login
        #- { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }

        # Accès anonyme pour la déconnexion
        - { path: ^/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Protection des routes administratives
        - { path: ^/users/new, roles: ROLE_ADMIN }
        - { path: ^/users/\d+/edit, roles: ROLE_ADMIN }
        - { path: ^/users/\d+/delete, roles: ROLE_ADMIN }
        - { path: ^/users, roles: ROLE_ADMIN }
        - { path: ^/articles/new, roles: ROLE_ADMIN }
        - { path: ^/articles/\d+/edit, roles: ROLE_ADMIN }
        - { path: ^/articles/\d+/delete, roles: ROLE_ADMIN }
        - { path: ^/recettes, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/recettes/gestion, roles: ROLE_ADMIN}
        # Protection des routes API avec authentification requise
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY}
